<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dengyu.daydayshoping.mapper.ProductMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="org.dengyu.daydayshoping.domain.Product">
        <id column="id" property="id" />
        <result column="createTime" property="createTime" />
        <result column="updateTime" property="updateTime" />
        <result column="name" property="name" />
        <result column="subName" property="subName" />
        <result column="code" property="code" />
        <result column="product_type_id" property="productTypeId" />
        <result column="onSaleTime" property="onSaleTime" />
        <result column="offSaleTime" property="offSaleTime" />
        <result column="brand_id" property="brandId" />
        <result column="state" property="state" />
        <result column="maxPrice" property="maxPrice" />
        <result column="minPrice" property="minPrice" />
        <result column="saleCount" property="saleCount" />
        <result column="viewCount" property="viewCount" />
        <result column="commentCount" property="commentCount" />
        <result column="commentScore" property="commentScore" />
        <result column="viewProperties" property="viewProperties" />
        <result column="goodCommentCount" property="goodCommentCount" />
        <result column="commonCommentCount" property="commonCommentCount" />
        <result column="badCommentCount" property="badCommentCount" />
    </resultMap>

    <resultMap id="ProductMap" type="org.dengyu.daydayshoping.domain.Product">
        <id column="id" property="id" />
        <result column="createTime" property="createTime" />
        <result column="updateTime" property="updateTime" />
        <result column="name" property="name" />
        <result column="subName" property="subName" />
        <result column="code" property="code" />
        <result column="product_type_id" property="productTypeId" />
        <result column="onSaleTime" property="onSaleTime" />
        <result column="offSaleTime" property="offSaleTime" />
        <result column="brand_id" property="brandId" />
        <result column="state" property="state" />
        <result column="maxPrice" property="maxPrice" />
        <result column="minPrice" property="minPrice" />
        <result column="saleCount" property="saleCount" />
        <result column="viewCount" property="viewCount" />
        <result column="commentCount" property="commentCount" />
        <result column="commentScore" property="commentScore" />
        <result column="viewProperties" property="viewProperties" />
        <result column="goodCommentCount" property="goodCommentCount" />
        <result column="commonCommentCount" property="commonCommentCount" />
        <result column="badCommentCount" property="badCommentCount" />
        <association property="brand" javaType="Brand">
            <id column="bid" property="id"/>
            <result column="bname" property="name"/>
        </association>
        <association property="productType" javaType="ProductType">
            <id column="ptid" property="id"/>
            <result column="ptname" property="name"/>
        </association>
        <association property="productExt" javaType="ProductExt">
            <id column="peid" property="id"/>
            <result column="description" property="description"/>
            <result column="richContent" property="richContent"/>
        </association>
    </resultMap>

    <!--List<Product> loadPageData(Page<Product> page, ProductQuery query);-->

        <select id="loadPageData" parameterType="ProductQuery" resultMap="ProductMap">
            SELECT
                p.*, b.id bid,
                b. NAME bname,
                pt.id ptid,
                pt. NAME ptname,
                pe.id peid,
                pe.description,pe.richContent
            FROM
                t_product p
            LEFT JOIN t_brand b ON p.brand_id = b.id
            LEFT JOIN t_product_type pt ON p.product_type_id = pt.id
            LEFT JOIN t_product_ext pe ON p.id = pe.productId
            <include refid="whereSql"/>
    </select>
    <sql id="whereSql">
        <where>
            <if test="keyword!=null and keyword!=''">
                and (p.name  LIKE concat("%",#{keyword},"%"))
            </if>
        </where>
    </sql>
</mapper>
